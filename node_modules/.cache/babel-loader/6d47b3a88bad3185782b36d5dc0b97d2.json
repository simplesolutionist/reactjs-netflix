{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\nexport default function useAuthListener() {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n  const {\n    firebase\n  } = useContext(FirebaseContext);\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged(authUser => {\n      if (authUser) {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem('authUser');\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, []);\n  return {\n    user\n  };\n}\n\n_s(useAuthListener, \"og5KOqGEvEXX6clV2sRD6qnxvZ4=\");","map":{"version":3,"sources":["/Users/aymanali/Desktop/netflix/src/hooks/use-auth-listener.js"],"names":["useState","useEffect","useContext","FirebaseContext","useAuthListener","user","setUser","JSON","parse","localStorage","getItem","firebase","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACC,eAAD,CAA/B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAGD,QAAQ,CAACE,IAAT,GAAgBC,kBAAhB,CAAoCC,QAAD,IAAc;AAChE,UAAIA,QAAJ,EAAc;AACZN,QAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCT,IAAI,CAACU,SAAL,CAAeF,QAAf,CAAjC;AACAT,QAAAA,OAAO,CAACS,QAAD,CAAP;AACD,OAHD,MAGO;AACLN,QAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB;AACAZ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KARgB,CAAjB;AAUA,WAAO,MAAMM,QAAQ,EAArB;AACD,GAZM,EAYJ,EAZI,CAAT;AAcE,SAAO;AAAEP,IAAAA;AAAF,GAAP;AACD;;GAlBmBD,e","sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport { FirebaseContext } from '../context/firebase';\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n    const { firebase } = useContext(FirebaseContext);\n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n          if (authUser) {\n            localStorage.setItem('authUser', JSON.stringify(authUser));\n            setUser(authUser);\n          } else {\n            localStorage.removeItem('authUser');\n            setUser(null);\n          }\n        });\n    \n        return () => listener();\n      }, []);\n    \n      return { user };\n    }"]},"metadata":{},"sourceType":"module"}